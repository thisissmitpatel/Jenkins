pipeline {
    agent any

    environment {
        DIRECTORY_PATH = '/path/to/code'
        TESTING_ENVIRONMENT = 'Staging'
        PRODUCTION_ENVIRONMENT = 'Smit_Production'
    }

    stages {
        stage('Build') {
            steps {
                echo "Building the code using Maven..."
                echo "Command: mvn clean package"
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo "Running unit tests with JUnit..."
                echo "Command: mvn test"

                echo "Running integration tests with Maven Failsafe Plugin..."
                echo "Command: mvn verify"
            }
        }

        stage('Code Analysis') {
            steps {
                echo "Analyzing code with SonarQube..."
                echo "Command: mvn sonar:sonar -Dsonar.projectKey=my-project"
            }
        }

        stage('Security Scan') {
            steps {
                echo "Performing security scan with OWASP Dependency-Check..."
                echo "Command: mvn org.owasp:dependency-check-maven:check"
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo "Deploying application to staging environment with AWS CLI..."
                echo "Command: aws s3 cp target/your-app.jar s3://your-staging-bucket/path/to/deploy/"
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo "Running integration tests on staging environment with TestNG..."
                echo "Command: mvn test -Denv=staging"
            }
        }

        stage('Deploy to Production') {
            steps {
                echo "Deploying application to production environment with AWS CLI..."
                echo "Command: aws s3 cp target/your-app.jar s3://your-production-bucket/path/to/deploy/"
            }
        }
    }

    post {
        success {
            emailext(
                subject: "SUCCESS: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: """
                Good news! The build ${env.JOB_NAME} [${env.BUILD_NUMBER}] was successful.
                You can view it at: ${env.BUILD_URL}
                """,
                to: 'smitpatel12333@gmail.com',
                attachLog: true
            )
        }
        failure {
            emailext(
                subject: "FAILURE: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: """
                Unfortunately, the build ${env.JOB_NAME} [${env.BUILD_NUMBER}] failed.
                Please check the Jenkins logs at: ${env.BUILD_URL}
                """,
                to: 'smitpatel12333@gmail.com',
                attachLog: true
            )
        }
        always {
            echo 'This will always run after all the stages have completed.'
        }
    }
}
